// –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
let stats = {
    –ó–¥–æ—Ä–æ–≤—å–µ: 100,
    –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: 0,
    –î–µ–Ω—å–≥–∏: 0
  };
  
  // –û–±—ä–µ–∫—Ç —Å—Ü–µ–Ω—ã
  const scenes = {
  start: {
  title: "–ù–∞—á–∞–ª–æ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è",
  text: "–í—ã –æ–∫–∞–∑–∞–ª–∏—Å—å –≤ —Ç–µ–º–Ω–æ–º –ª–µ—Å—É. –ö—É–¥–∞ –ø–æ–π–¥–µ—Ç–µ?",
  image: "images/start.jpg",
  options: [
    {
      text: "–ù–∞–ª–µ–≤–æ",
      nextScene: "left",
      changes: null, // –ù–µ –º–µ–Ω—è–µ–º —á–µ—Ä–µ–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º
      resetHealth: true // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω–æ–µ –ø–æ–ª–µ
    },
    {
      text: "–ù–∞–ø—Ä–∞–≤–æ",
      nextScene: "right",
      changes: { –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: +50 }
    }
  ]
},
  right: {
    title: "–°—É–Ω–¥—É–∫ —Å –∑–æ–ª–æ—Ç–æ–º",
    text: "–í—ã –Ω–∞—à–ª–∏ —Å—É–Ω–¥—É–∫ —Å –∑–æ–ª–æ—Ç–æ–º!",
    image: "images/coins.jpg",
    options: [{ text: "–ó–∞–±—Ä–∞—Ç—å –≤—Å—ë", nextScene: "end", changes: { –î–µ–Ω—å–≥–∏: +100, –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: +50 } }]
  },
  left: {
    title: "–ü–ª–æ—Ö–æ–π –∫–æ–Ω–µ—Ü",
    text: "–í–∞—Å —Å—ä–µ–ª–∞ –º–µ–¥–≤–µ–¥–∏—Ü–∞ ‚ò†Ô∏è.",
    image: "images/bear.jpg",
    options: [
      { text: "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", nextScene: "start", changes: null, reset: true }
    ]
  },
  end: {
    title: "–ö–æ–Ω–µ—Ü",
    text: "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É! üòò ",
    image: "images/end.jpg",
    options: []
  }
};
  
  let choicesHistory = []; // –ò—Å—Ç–æ—Ä–∏—è –≤—ã–±–æ—Ä–æ–≤ (—Ç–µ–∫—Å—Ç)
  let currentSceneId = "start";
  
  const storyTextEl = document.getElementById("story-text");
  const optionsEl = document.getElementById("options");
  const historyEl = document.getElementById("history");
  const statsListEl = document.getElementById("stats-list");
  
  // –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ü–µ–Ω—ã
function showScene(sceneId) {
  const scene = scenes[sceneId];
  if (!scene) return;

  currentSceneId = sceneId;
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
  document.querySelector(".game-container h1").textContent = scene.title;
  
  storyTextEl.textContent = scene.text;
  optionsEl.innerHTML = "";

  // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É, –µ—Å–ª–∏ –µ—Å—Ç—å
  const imageEl = document.getElementById("scene-image");
  if (scene.image) {
    imageEl.src = scene.image;
    imageEl.style.display = "block";
  } else {
    imageEl.style.display = "none";
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
  scene.options.forEach(option => {
    const button = document.createElement("button");
    button.textContent = option.text;
    button.addEventListener("click", () => {
  choicesHistory.push(option.text);

  // –°–±—Ä–æ—Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ reset
  if (option.reset) {
    stats = {
      –ó–¥–æ—Ä–æ–≤—å–µ: 100,
      –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: 0,
      –î–µ–Ω—å–≥–∏: 0
    };
  } else {
    // –ï—Å–ª–∏ –µ—Å—Ç—å custom-–ø–æ–ª–µ resetHealth ‚Äî –∑–∞–Ω—É–ª—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ
    if (option.resetHealth) {
      stats["–ó–¥–æ—Ä–æ–≤—å–µ"] = 0;
    }

    // –ò–Ω–∞—á–µ –ø—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞–∫ –æ–±—ã—á–Ω–æ
    if (option.changes) {
      for (let key in option.changes) {
        stats[key] += option.changes[key];
      }
    }
  }

  currentSceneId = option.nextScene;
  showScene(option.nextScene);
  updateStatsDisplay();
});
    optionsEl.appendChild(button);
  });
}
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏
  function updateHistoryDisplay() {
    historyEl.innerHTML = "<h3>–í–∞—à–∏ —Ö–æ–¥—ã:</h3>";
    choicesHistory.forEach((choice, index) => {
      const div = document.createElement("div");
      div.className = "history-item";
      div.textContent = `${index + 1}. ${choice}`;
      historyEl.appendChild(div);
    });
  
    historyEl.scrollTop = historyEl.scrollHeight;
  }
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
  function updateStatsDisplay() {
  statsListEl.innerHTML = "";
  for (let key in stats) {
    const value = stats[key];
    let iconHTML = "";

    // –ò–∫–æ–Ω–∫–∞ —Å —Ü–≤–µ—Ç–æ–º
    if (key === "–ó–¥–æ—Ä–æ–≤—å–µ") {
      if (value >= 81) {
        iconHTML = '<span class="heart-icon">‚ù§Ô∏è</span>';
      } else if (value >= 41) {
        iconHTML = '<span class="heart-icon">üíõ</span>';
      } else if (value >= 1) {
        iconHTML = '<span class="heart-icon">üíî</span>';
      } else {
        iconHTML = '<span class="death-icon">‚ò†Ô∏è</span>';
      }
    } else if (key === "–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ") {
      if (value <= 30) {
        iconHTML = '<span class="mood-icon">üò¢</span>';
      } else if (value <= 69) {
        iconHTML = '<span class="mood-icon">üòê</span>';
      } else {
        iconHTML = '<span class="mood-icon">üòÑ</span>';
      }
    } else if (key === "–î–µ–Ω—å–≥–∏") {
      iconHTML = "üí∞";
    }

    const li = document.createElement("li");
    li.innerHTML = `${iconHTML} ${key}: ${value}`;

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å—ã –≤–º–µ—Å—Ç–æ –∏–Ω–ª–∞–π–Ω–æ–≤—ã—Ö —Å—Ç–∏–ª–µ–π
    if (key === "–ó–¥–æ—Ä–æ–≤—å–µ") {
      li.classList.add(value > 0 ? "stat-health" : "stat-health-zero");
    } else if (key === "–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ") {
      li.classList.add("stat-mood");
    } else if (key === "–î–µ–Ω—å–≥–∏") {
      li.classList.add("stat-money");
    }

    statsListEl.appendChild(li);
  }
}

   

  const toggleHistoryBtn = document.getElementById("toggle-history-btn");

let historyShown = false;

toggleHistoryBtn.addEventListener("click", () => {
  historyShown = !historyShown;
  if (historyShown) {
    updateHistoryDisplay();
    historyEl.style.display = "block";
    toggleHistoryBtn.textContent = "–°–∫—Ä—ã—Ç—å –∏—Å—Ç–æ—Ä–∏—é";
  } else {
    historyEl.style.display = "none";
    toggleHistoryBtn.textContent = "–ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é";
  }
});
  
  // –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
  showScene(currentSceneId);
  
  updateStatsDisplay();
